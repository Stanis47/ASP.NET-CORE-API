// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectsManagement.API.Persistance.Contexts;

namespace ProjectsManagement.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectsManagement.API.Domain.Models.Programmer", b =>
                {
                    b.Property<int>("ProgrammerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("ImageUrl");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Phone");

                    b.HasKey("ProgrammerID");

                    b.ToTable("Programmers");

                    b.HasData(
                        new
                        {
                            ProgrammerID = 100,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(2002),
                            Email = "bojack@mail.com",
                            FirstName = "BoJack",
                            ImageUrl = "https://localhost:44340/images/bojack.jpg",
                            LastName = "Horseman",
                            Phone = "+ 11 111 11 11 111"
                        },
                        new
                        {
                            ProgrammerID = 101,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nguyen@mail.com",
                            FirstName = "Diane",
                            ImageUrl = "https://localhost:44340/images/diane.jpg",
                            LastName = "Nguyen",
                            Phone = "+22 222 22 22 222"
                        },
                        new
                        {
                            ProgrammerID = 102,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "chavez@mail.com",
                            FirstName = "Todd",
                            ImageUrl = "https://localhost:44340/images/todd.jpg",
                            LastName = "Chavez",
                            Phone = "+33 333 33 33 333"
                        },
                        new
                        {
                            ProgrammerID = 103,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "peanutbutter@mail.com",
                            FirstName = "Mr.",
                            ImageUrl = "https://localhost:44340/images/peanutbutter.jpg",
                            LastName = "Peanutbutter",
                            Phone = "+44 444 44 44 444"
                        },
                        new
                        {
                            ProgrammerID = 104,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "carolyn@mail.com",
                            FirstName = "Princess",
                            ImageUrl = "https://localhost:44340/images/carolyn.jpg",
                            LastName = "Carolyn",
                            Phone = "+55 555 55 55 555"
                        },
                        new
                        {
                            ProgrammerID = 105,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mannowdog@mail.com",
                            FirstName = "Judah",
                            ImageUrl = "https://localhost:44340/images/mannowdog.jpg",
                            LastName = "Mannowdog",
                            Phone = "+66 666 66 66 666"
                        });
                });

            modelBuilder.Entity("ProjectsManagement.API.Domain.Models.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("getDate()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("FullDescription")
                        .HasMaxLength(300);

                    b.Property<bool>("IsCompleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("ProjectID");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectID = 100,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Shord description for project",
                            FullDescription = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fuga aliquid dolorem ea distinctio exercitationem delectus qui, quas eum architecto, amet quasi accusantium, fugit consequatur ducimus obcaecati numquam molestias hic itaque accusantium doloremque laudantium, totam rem aperiam.",
                            IsCompleted = false,
                            Name = "First Project"
                        },
                        new
                        {
                            ProjectID = 101,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Shord description for project",
                            FullDescription = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fuga aliquid dolorem ea distinctio exercitationem delectus qui, quas eum architecto, amet quasi accusantium, fugit consequatur ducimus obcaecati numquam molestias hic itaque accusantium doloremque laudantium, totam rem aperiam.",
                            IsCompleted = false,
                            Name = "Second Project"
                        },
                        new
                        {
                            ProjectID = 102,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Shord description for project",
                            FullDescription = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fuga aliquid dolorem ea distinctio exercitationem delectus qui, quas eum architecto, amet quasi accusantium, fugit consequatur ducimus obcaecati numquam molestias hic itaque accusantium doloremque laudantium, totam rem aperiam.",
                            IsCompleted = false,
                            Name = "Third Project"
                        },
                        new
                        {
                            ProjectID = 103,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Shord description for project",
                            FullDescription = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fuga aliquid dolorem ea distinctio exercitationem delectus qui, quas eum architecto, amet quasi accusantium, fugit consequatur ducimus obcaecati numquam molestias hic itaque accusantium doloremque laudantium, totam rem aperiam.",
                            IsCompleted = false,
                            Name = "Fourth Project"
                        });
                });

            modelBuilder.Entity("ProjectsManagement.API.Domain.Models.ProjectProgrammer", b =>
                {
                    b.Property<int>("ProjectID");

                    b.Property<int>("ProgrammerID");

                    b.HasKey("ProjectID", "ProgrammerID");

                    b.HasIndex("ProgrammerID");

                    b.ToTable("ProjectProgrammers");

                    b.HasData(
                        new
                        {
                            ProjectID = 100,
                            ProgrammerID = 100
                        },
                        new
                        {
                            ProjectID = 100,
                            ProgrammerID = 102
                        },
                        new
                        {
                            ProjectID = 100,
                            ProgrammerID = 104
                        },
                        new
                        {
                            ProjectID = 101,
                            ProgrammerID = 101
                        },
                        new
                        {
                            ProjectID = 101,
                            ProgrammerID = 103
                        },
                        new
                        {
                            ProjectID = 101,
                            ProgrammerID = 105
                        },
                        new
                        {
                            ProjectID = 102,
                            ProgrammerID = 100
                        },
                        new
                        {
                            ProjectID = 102,
                            ProgrammerID = 102
                        },
                        new
                        {
                            ProjectID = 102,
                            ProgrammerID = 104
                        },
                        new
                        {
                            ProjectID = 103,
                            ProgrammerID = 102
                        },
                        new
                        {
                            ProjectID = 103,
                            ProgrammerID = 105
                        },
                        new
                        {
                            ProjectID = 103,
                            ProgrammerID = 104
                        });
                });

            modelBuilder.Entity("ProjectsManagement.API.Domain.Models.ProjectProgrammer", b =>
                {
                    b.HasOne("ProjectsManagement.API.Domain.Models.Programmer", "Programmer")
                        .WithMany("Projects")
                        .HasForeignKey("ProgrammerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectsManagement.API.Domain.Models.Project", "Project")
                        .WithMany("Programmers")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
